// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.1.3 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MastercardSonic
import AVFoundation
import Foundation
@_exported import MastercardSonic
import Swift
import UIKit
@objc public enum MCSonicStatus : Swift.Int, Swift.Error {
  case success = 800
  case errorWhilePreparing = 901
  case errorWhilePreparingSound = 902
  case errorWhilePreparingAnimation = 903
  case errorAlreadyPlaying = 904
  case errorWhilePlaying = 905
  case errorWhilePlayingSound = 906
  case errorWhilePlayingAnimation = 907
  case errorNotPrepared = 908
  public typealias RawValue = Swift.Int
  public static var _nsErrorDomain: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum MCSonicType : Swift.Int {
  case animationAndSound
  case soundOnly
  case animationOnly
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc final public class MCSonicController : ObjectiveC.NSObject {
  @objc final public var isPlaying: Swift.Bool {
    get
    }
  @objc final public func prepare(with sonicType: MastercardSonic.MCSonicType = .animationAndSound, completion: ((MastercardSonic.MCSonicStatus) -> Swift.Void)?)
  @objc final public func play(with sonicView: MastercardSonic.MCSonicView?, completion: ((MastercardSonic.MCSonicStatus) -> Swift.Void)?)
  @objc override dynamic public init()
  @objc deinit
}
@objc @IBDesignable final public class MCSonicView : UIKit.UIView {
  @objc @IBInspectable final public var keepBackground: Swift.Bool {
    @objc get
    @objc set
  }
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc convenience dynamic public init()
  @objc override final public func layoutSubviews()
  @objc deinit
}
extension MastercardSonic.MCSonicType : Swift.Equatable {}
extension MastercardSonic.MCSonicType : Swift.Hashable {}
extension MastercardSonic.MCSonicType : Swift.RawRepresentable {}
